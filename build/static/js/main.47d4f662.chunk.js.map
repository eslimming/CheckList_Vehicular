{"version":3,"sources":["Components/miRadioGroup.js","Components/miTextArea.js","Components/miInputNumber.js","Components/miDatePicker.js","Components/miFileUpload.js","Components/Grupos.js","Components/Formulario.js","Components/MyIFrame.js","Components/SelVehiculo.js","App.js","serviceWorker.js","index.js"],"names":["RadioGroup","props","handleOnChange","dato","setState","value","val","onDato","textInput","focus","state","setTextInputRef","element","focusTextInput","a","b","nvalue","this","items","map","item","label","idGrupo","Fragment","className","ref","color","empty","key","id","disabled","name","checked","handleChecked","onChange","React","Component","TextoArea","fileError","acceptedFiles","rejectedFiles","fluid","InputNumber","isNaN","onRemoveDato","type","min","DTPicker","document","activeElement","blur","languageCode","helperText","closeOnDocumentClick","reserveSpace","displayFormat","readOnly","showYearSelector","config","require","APIFotos","api_fotos","headers","authorization","SubirArchivo","API","formData","axios","post","buttonText","resetButtonText","acceptedTypes","placeholder","maxSize","error","onAccepted","files","onRejected","onReset","file","index","FormData","append","Math","random","toFixed","token","Subir","ex","console","log","size","Dibuja","dibujar","Row","Cell","textAlign","General","handleDato","onhandleGeneralDato","handleRemoveDato","onhandleGeneralRemoveDato","activeName","Pagina","Header","HeaderCell","content","titulo","Body","Footer","align","colSpan","ReactToastify","APIFormulario","api_formulario","APIResultado","api_resultado","ToastNotification","closeToast","Texto","Detalle","severity","onCloseClick","hasIcon","title","detailsText","onDetailsClick","App","handleGeneralRemoveDato","nitems","filter","c","nitems2","nitem","concat","idPregunta","split","Respuesta","keyPageFile","ndatos","datos","parseInt","ndatos2","ndato","ndatos3","Preguntas_Respondidas","ndatos4","respuestas","handleGeneralDato","indexOf","push","isLoading","hidden","activePage","apiBody","modal","modalFin","Preguntas_Todas","Preguntas_Faltantes","Situacion_Final","Color_Situacion_Final","MensajeAPI","click_Next","bind","click_Prev","click_Send","click_ModalSi","click_ModalNo","idPlanta","then","res","JSON","parse","data","JsonString","e","setInterval","Pregunta","includes","mensaje","page","Number","pageSize","length","toast","stringify","replace","window","scrollTo","addResultados","idUsuario","idVehiculo","Mensaje","location","reload","menu","Patente","Content","minHeight","copyrightText","Date","getFullYear","Item","href","renderModal","renderModalFin","style","width","icon","iconPosition","onClick","loading","colspan","ToastContainer","hideProgressBar","closeOnClick","closeButton","newestOnTop","position","autoClose","toastClassName","closeIcon","onClose","open","closeOnDimmerClick","click_ModalFin","MyIFrame","setTimeout","height","src","frameborder","SelVehiculo","vehiculoSeleccionadoEstado","vehiculos","vehiculo","filteredVehicle","estado","estadoVehiculo","selector","habilitarBoton","comenzar","onButtonClick","onReporteClick","listavehiculos","patente","planta","options","paddingTop","root","bulleted","permiso_Circulacion","seguro_Obligatorio","revision_Tecnica","responsable","lastchecklist","api_login","Tema","Theme","localStorage","getItem","lazy","fallback","handleOnChangeTheme","setItem","toString","tema","RUT","onLoaded","handleLoaded","Column","sWidth","toggle","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.47d4f662.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Radio, Badge } from '@scuf/common';\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n\r\n        this.textInput = null;\r\n        this.setTextInputRef = element => {\r\n            this.textInput = element;\r\n        };\r\n        this.focusTextInput = () => {\r\n            if (this.textInput) this.textInput.focus();\r\n        };\r\n\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n        this.textInput.focus();\r\n        /*window.scrollTo(1, 100);*/\r\n    }\r\n\r\n    handleChecked(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value ? item.label : nvalue\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n            <React.Fragment>\r\n                <button className=\"oculto\" ref={this.setTextInputRef} />\r\n                <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} />\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        <Radio key={item.id}\r\n                            label={item.label}\r\n                            disabled={false}\r\n                            name=\"RadioGroup\"\r\n                            checked={this.handleChecked(this.state.value, item.label)}\r\n                            onChange={() => this.handleOnChange({ key: idGrupo, id: item.id, val: item.label })}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { TextArea, Badge } from '@scuf/common';\r\n\r\nexport default class TextoArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} />\r\n                        { item.label}\r\n                        <TextArea\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Input, Badge } from '@scuf/common';\r\n\r\nexport default class InputNumber extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: 0,\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        if (!isNaN(dato.val)) {\r\n            this.setState({ value: dato.val });\r\n            this.props.onDato(dato);\r\n        }\r\n        else {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n\r\n        if (dato.val === \"\") {\r\n            this.props.onRemoveDato(dato);\r\n        }\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    render() {\r\n\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                {this.props.items.map((item) => (\r\n                    <React.Fragment>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} />\r\n                        { item.label}\r\n                        <Input\r\n                            type={\"number\"}\r\n                            key={item.id}\r\n                            fluid={true}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            min={0}\r\n                        />\r\n                    </React.Fragment>\r\n                ))}\r\n\r\n\r\n                {/*<React.Fragment>*/}\r\n\r\n                {/*    <LocalizationConfig languageCode={this.state.lng}>*/}\r\n                {/*        <FileDrop*/}\r\n                {/*            label=\"Fotos del Vehiculo\"*/}\r\n                {/*            buttonText=\"Subir Foto\"*/}\r\n                {/*            resetButtonText=\"Eliminar Fotos\"*/}\r\n                {/*            acceptedTypes={['image/*']}*/}\r\n                {/*            placeholder=\"Arrastrar Foto (maximo: 5MB)\"*/}\r\n                {/*            maxSize=\"1000\"*/}\r\n                {/*            error={this.state.fileError}*/}\r\n                {/*            onAccepted={(files) => this.setState({ acceptedFiles: [...acceptedFiles, ...files] })}*/}\r\n                {/*            onRejected={(files) => this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })}*/}\r\n                {/*            onReset={() => this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })}*/}\r\n                {/*        />*/}\r\n                {/*        <h5>Fotos Aceptadas:</h5>*/}\r\n                {/*        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*        <h4>Fotos Rechazadass:</h4>*/}\r\n                {/*        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}*/}\r\n                {/*    </LocalizationConfig>*/}\r\n                {/*</React.Fragment>*/}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { DatePicker } from '@scuf/common';\r\nimport { LocalizationConfig } from '@scuf/localization';\r\n\r\n\r\nexport default class DTPicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: \"\"\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.activeElement.blur();\r\n    }\r\n\r\n\r\n    render() {\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <div id=\"blur\">\r\n                <LocalizationConfig languageCode={'es-CL'}>\r\n                    {this.props.items.map((item) => (\r\n                        <DatePicker\r\n                            className=\"abajo\"\r\n                            key={item.id}\r\n                            type=\"date\"\r\n                            helperText={item.label}\r\n                            closeOnDocumentClick={true}\r\n                            fluid={true}\r\n                            reserveSpace={true}\r\n                            displayFormat={\"DD-MM-YYYY\"}\r\n                            value={this.state.value}\r\n                            onChange={(value) => this.handleOnChange({ key: idGrupo, id: item.id, val: value })}\r\n                            readOnly={false}\r\n                            disabled={false}\r\n                            showYearSelector={true}\r\n                        />\r\n\r\n                    ))}\r\n                </LocalizationConfig>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { FileDrop, Badge } from '@scuf/common';\r\nimport axios from \"axios\";\r\n\r\n\r\nconst config = require(\"../config.json\");\r\nconst APIFotos = config.api_fotos\r\nconst apiKey = config.authorization;\r\nconst headers = { 'authorization': apiKey }\r\nexport default class SubirArchivo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fileError: \"\",\r\n            value: \"\",\r\n            acceptedFiles: [],\r\n            rejectedFiles: []\r\n        };\r\n    }\r\n\r\n    handleOnChange = (dato) => {\r\n        this.setState({ value: dato.val });\r\n        this.props.onDato(dato);\r\n    }\r\n\r\n    handleValue(a, b) {\r\n        return a === b\r\n    }\r\n\r\n\r\n    componentWillMount() {\r\n        var nvalue = \"\"\r\n        this.props.items.map((item) =>\r\n            nvalue = item.value\r\n        )\r\n        this.setState({ value: nvalue });\r\n    }\r\n\r\n    async Subir(API, formData, headers) {\r\n        await axios.post(`${API}`, formData, { headers: headers });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { acceptedFiles, rejectedFiles } = this.state;\r\n        var idGrupo = this.props.idGrupo\r\n        return (\r\n\r\n            <React.Fragment>\r\n                {this.props.items.map((item) => (\r\n\r\n                    <React.Fragment>\r\n                        <FileDrop\r\n                            key={item.id}\r\n                            label={\r\n                                <React.Fragment>\r\n                                    <h5>\r\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                                        <Badge color={this.state.value === \"\" ? \"red\" : \"green\"} empty={true} />\r\n                                        {item.label}\r\n                                    </h5>\r\n                                </React.Fragment>\r\n                            }\r\n                            buttonText=\"Tomar Foto\"\r\n                            resetButtonText=\"Enviar Fotos\"\r\n                            acceptedTypes={['image/*']}\r\n                            placeholder=\"Arrastrar Archivo (maximo: 5MB)\"\r\n                            maxSize=\"5000000\"\r\n                            error={this.state.fileError}\r\n                            onAccepted={(files) => {\r\n                                this.setState({ acceptedFiles: [...acceptedFiles, ...files] })\r\n                            }\r\n                            }\r\n\r\n                            onRejected={(files) => {\r\n                                this.setState({ rejectedFiles: [...rejectedFiles, ...files], fileError: \"uno o mas archivos fueron rechazados\" })\r\n                                /*this.handleOnChange({ key: idGrupo, id: item.id, val: \"x\" })*/\r\n                            }\r\n                            }\r\n                            onReset={() => {\r\n                                this.handleOnChange({ key: idGrupo, id: item.id, val: \"ok\" })\r\n                                this.setState({ rejectedFiles: [], acceptedFiles: [], fileError: \"\" })\r\n                                this.state.acceptedFiles.map((file, index) => {\r\n                                    const formData = new FormData();\r\n                                    //formData.append(\"formFile\", file);\r\n                                    //formData.append(\"fileName\", index + 1 + \"_\" + (1000000 * Math.random()).toFixed(0) + \"_\" + file.name);\r\n                                    //formData.append(\"FolderName\", this.props.token);\r\n                                    formData.append(\"archivo\", file);\r\n                                    formData.append(\"nombreArchivo\", index + 1 + \"_\" + (1000000 * Math.random()).toFixed(0) + \"_\" + file.name);\r\n                                    formData.append(\"path\", \"upload/checklist/\" + this.props.token);\r\n                                    try {\r\n                                        //const res = axios.post(`${APIFotos}`, formData, { headers: headers });\r\n                                        //console.log(res);\r\n                                        this.Subir(APIFotos, formData, headers)\r\n                                        return null\r\n                                    } catch (ex) {\r\n                                        console.log(ex);\r\n                                        return null\r\n                                    }\r\n                                }\r\n                                )\r\n\r\n                            }\r\n                            }\r\n\r\n                        />\r\n                        <h6>Fotos Aceptadas:</h6>\r\n                        {acceptedFiles && acceptedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}\r\n                        <h6>Fotos Rechazadas:</h6>\r\n                        {rejectedFiles && rejectedFiles.map(file => <p>{file.name} - {file.size} bytes</p>)}\r\n                    </React.Fragment>\r\n\r\n\r\n                ))}\r\n\r\n\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Table } from '@scuf/common';\r\nimport RadioGroup from \"./miRadioGroup\";\r\nimport TextoArea from \"./miTextArea\"\r\nimport InputNumber from \"./miInputNumber\"\r\nimport DTPicker from \"./miDatePicker\"\r\nimport SubirArchivo from \"./miFileUpload\"\r\n\r\n\r\n\r\nfunction Dibuja(props) {\r\n\r\n    const dibujar = props.items;\r\n    if (dibujar.type === 'checkboxes') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"><RadioGroup key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'textareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <TextoArea key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'numberareas') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell> <InputNumber key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} onRemoveDato={props.onRemoveDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else if (dibujar.type === 'datepickers') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                <Table.Cell>{dibujar.label}</Table.Cell>\r\n                <Table.Cell textAlign=\"right\"> <DTPicker key={props.idGrupo} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    } else if (dibujar.type === 'fileuploads') {\r\n        return <React.Fragment>\r\n            <Table.Row>\r\n                {/*<Table.Cell>{dibujar.label}</Table.Cell>*/}\r\n                <Table.Cell textAlign=\"left\"> <SubirArchivo key={props.idGrupo} token={props.token} idGrupo={props.idGrupo} items={dibujar.items} onDato={props.onDato} /> </Table.Cell>\r\n            </Table.Row>\r\n        </React.Fragment>\r\n    }\r\n    else return <React.Fragment />\r\n\r\n\r\n}\r\n\r\n\r\nexport default class General extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeName: \"\"\r\n        };\r\n    }\r\n\r\n\r\n\r\n    handleDato = (dato) => {\r\n        this.props.onhandleGeneralDato(dato);\r\n    };\r\n\r\n    handleRemoveDato = (dato) => {\r\n        this.props.onhandleGeneralRemoveDato(dato);\r\n    };\r\n\r\n    render() {\r\n        const Pagina = this.props.id\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Table key={Pagina}>\r\n                    <Table.Header>\r\n                        <Table.HeaderCell content={this.props.titulo} textAlign=\"left\" />\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                        {\r\n\r\n                            this.props.items.map((item) => (\r\n                                <React.Fragment>\r\n                                    <Dibuja key={item.id} token={this.props.token} idGrupo={Pagina + \"-\" + item.id} items={item} onDato={this.handleDato} onRemoveDato={this.handleRemoveDato} />\r\n                                </React.Fragment>\r\n                            ))}\r\n\r\n                    </Table.Body>\r\n                    <Table.Footer>\r\n                        <Table.Row align=\"center\">\r\n                            <Table.HeaderCell colSpan={2}>\r\n\r\n                            </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Footer>\r\n                </Table>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Footer, Header, Button, Notification, Card, Loader, Modal, Badge } from \"@scuf/common\";\r\nimport Grupos from \"./Grupos\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../toast-notification-wrap.css'\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\nconst config = require(\"../config.json\");\r\nconst APIFormulario = config.api_formulario\r\nconst APIResultado = config.api_resultado\r\nconst apiKey = config.authorization;\r\nconst headers = { 'authorization': apiKey }\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto, Detalle }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        //detailsText=\"Todos los datos son obligatorios\"\r\n        detailsText={Detalle}\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n)\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            hidden: \"hidden\",\r\n            activePage: 0,\r\n            datos: [], //require(\"./Components/datos.json\"),\r\n            items: [],\r\n            respuestas: [],\r\n            apiBody: \"\",\r\n            modal: false,\r\n            modalFin: false,\r\n            Preguntas_Todas: [],\r\n            Preguntas_Respondidas: [],\r\n            Preguntas_Faltantes: [],\r\n            Situacion_Final: \"\",\r\n            Color_Situacion_Final: \"\",\r\n            MensajeAPI: \"\"\r\n        };\r\n        this.click_Next = this.click_Next.bind(this);\r\n        this.click_Prev = this.click_Prev.bind(this);\r\n        this.click_Send = this.click_Send.bind(this);\r\n        this.click_ModalSi = this.click_ModalSi.bind(this);\r\n        this.click_ModalNo = this.click_ModalNo.bind(this);\r\n    }\r\n\r\n\r\n\r\n    componentWillMount() {\r\n        try {\r\n\r\n            axios.post(`${APIFormulario}`,\r\n                {\r\n                    \"idPlanta\": this.props.idPlanta\r\n                },\r\n                { headers: headers })\r\n                .then((res) => {\r\n                    const items = JSON.parse(res.data[0].JsonString)\r\n                    this.setState({\r\n                        datos: items,\r\n                        isLoading: false\r\n                    });\r\n                });\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        try {\r\n            setInterval(async () => {\r\n                if (this.state.isLoading)\r\n                    axios.post(`${APIFormulario}`,\r\n                        {\r\n                            \"idPlanta\": this.props.idPlanta\r\n                        },\r\n                        { headers: headers })\r\n                        .then((res) => {\r\n                            const items = JSON.parse(res.data[0].JsonString)\r\n                            this.setState({\r\n                                datos: items,\r\n                                isLoading: false\r\n                            });\r\n                        });\r\n\r\n            }, 5000);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    click_Next() {\r\n\r\n        var Preguntas_Todas = []\r\n        this.state.datos[this.state.activePage].datos.map((item) => Preguntas_Todas.push(item.label))\r\n\r\n        let Preguntas_Faltantes = Preguntas_Todas.filter(Pregunta => !this.state.Preguntas_Respondidas.includes(Pregunta))\r\n\r\n        this.setState({\r\n            Preguntas_Todas: Preguntas_Todas,\r\n            Preguntas_Faltantes: Preguntas_Faltantes\r\n\r\n        });\r\n\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n\r\n        if (ndatos < pageSize) {\r\n            var mensaje\r\n            (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n            ReactToastify.toast(<ToastNotification Detalle={JSON.stringify(Preguntas_Faltantes).replace('[', '').replace(']', '')} Texto={mensaje} closeToast={true} />)\r\n        }\r\n        else {\r\n\r\n            if (this.state.activePage >= this.state.datos.length - 2) {\r\n                this.setState({ hidden: \"\" });\r\n            }\r\n\r\n            if (this.state.activePage < this.state.datos.length - 1) {\r\n                this.setState({ activePage: this.state.activePage + 1 });\r\n                window.scrollTo(1, 1);\r\n            }\r\n            //else {\r\n            //    this.setState({ activePage: 0, hidden: \"\" });\r\n            //}\r\n\r\n\r\n        }\r\n    }\r\n\r\n    click_Prev() {\r\n        const page = Number(this.state.datos[this.state.activePage].id)\r\n        //const pageSize = this.state.datos[this.state.activePage].datos.length\r\n        var ndatos = 0\r\n        this.state.items.map((item) => parseInt(item.key.split(\"-\")[0]) === page ? ndatos = ndatos + 1 : null)\r\n\r\n        //if (ndatos < pageSize) {\r\n        //    var mensaje\r\n        //    (pageSize - ndatos) === 1 ? mensaje = \"Falta un dato\" : mensaje = (\"Faltan \" + (pageSize - ndatos) + \" datos\")\r\n        //    ReactToastify.toast(<ToastNotification Texto={mensaje} closeToast={true} />)\r\n        //}\r\n        //else {\r\n        //    if (this.state.activePage > 0) {\r\n        //        this.setState({ activePage: this.state.activePage - 1 });\r\n        //    } else {\r\n        //        this.setState({ activePage: this.state.datos.length - 1 });\r\n        //    }\r\n        //    window.scrollTo(1, 1);\r\n        //}\r\n\r\n        if (this.state.activePage > 0) {\r\n            this.setState({ activePage: this.state.activePage - 1 });\r\n            window.scrollTo(1, 1);\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    click_Send() {\r\n        this.setState({ modal: true })\r\n    }\r\n\r\n    click_ModalSi() {\r\n        try {\r\n            this.setState({ isLoading: true, modal: false });\r\n\r\n            var addResultados = \"\"\r\n            this.state.respuestas.map((item) =>\r\n                /*addResultados += `EXECUTE dbo.add_Resultado '${this.props.token}',1,${this.props.idPlanta},${this.props.idUsuario},${this.props.idVehiculo},${item.idPregunta},'${item.Respuesta}';`*/\r\n                addResultados += `('${this.props.token}',1,${this.props.idPlanta},${this.props.idUsuario},${this.props.idVehiculo},${item.idPregunta},'${item.Respuesta}'),`\r\n            )\r\n\r\n            /*addResultados += `exec[dbo].[sp_SendMail] '${this.props.token}';`*/\r\n\r\n\r\n            var Situacion_Final = \"Vehiculo Operativo\\nConductor: Autorizado\"\r\n            var Color_Situacion_Final = \"green\\ngreen\"\r\n            if (addResultados.includes(\"'M'\")) {\r\n                Situacion_Final = \"Fuera de Servicio. Programar Mantención Correctiva\\nConductor: Autorizado\"\r\n                Color_Situacion_Final = \"red\\ngreen\"\r\n            } else if (addResultados.includes(\"'R'\")) {\r\n                Situacion_Final = \"Programar Mantención Preventiva\\nConductor: Autorizado\"\r\n                Color_Situacion_Final = \"yellow\\ngreen\"\r\n            }\r\n\r\n\r\n\r\n            axios.post(`${APIResultado}`,\r\n                {\r\n                    \"Query\": addResultados\r\n                },\r\n                { headers: headers })\r\n                .then((res) => {\r\n                    const items = res.data;\r\n\r\n                    if (items[0].Mensaje.includes(\"RV\")) {\r\n                        Situacion_Final = \"Fuera de Servicio. Programar Mantención Correctiva\\nConductor: Autorizado\"\r\n                        Color_Situacion_Final = \"red\\ngreen\"\r\n                    } else if (items[0].Mensaje.includes(\"AV\")) {\r\n                        Situacion_Final = \"Programar Mantención Preventiva\\nConductor: Autorizado\"\r\n                        Color_Situacion_Final = \"yellow\\ngreen\"\r\n                    } else if (items[0].Mensaje.includes(\"VV\")) {\r\n                        Situacion_Final = \"Vehiculo Operativo\\nConductor: Autorizado\"\r\n                        Color_Situacion_Final = \"green\\ngreen\"\r\n                    } else if (items[0].Mensaje.includes(\"RR\")) {\r\n                        Situacion_Final = \"Fuera de Servicio. Programar Mantención Correctiva\\nConductor: No Autorizado\"\r\n                        Color_Situacion_Final = \"red\\nred\"\r\n                    } else if (items[0].Mensaje.includes(\"AR\")) {\r\n                        Situacion_Final = \"Programar Mantención Preventiva\\nConductor: No Autorizado\"\r\n                        Color_Situacion_Final = \"yellow\\nred\"\r\n                    } else if (items[0].Mensaje.includes(\"VR\")) {\r\n                        Situacion_Final = \"Vehiculo Operativo\\nConductor: No Autorizado\"\r\n                        Color_Situacion_Final = \"green\\nred\"\r\n                    }\r\n\r\n                    this.setState({\r\n                        isLoading: false,\r\n                        modalFin: true,\r\n                        Situacion_Final: Situacion_Final,\r\n                        Color_Situacion_Final: Color_Situacion_Final,\r\n                        MensajeAPI: items[0].Mensaje\r\n                    });\r\n                });\r\n\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n            this.setState({\r\n                isLoading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    click_ModalNo() {\r\n        this.setState({ modal: false });\r\n    }\r\n\r\n\r\n    click_ModalFin() {\r\n        window.location.reload(false);\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralRemoveDato = (item) => {\r\n        //nitems: De los items filtro el key modificado (se elimina) y NO se concatena el nuevo item\r\n        const nitems = this.state.items.filter((c) => c.key !== item.key)\r\n\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n\r\n\r\n        //Con el filtro quita esta pregunt del array de preguntas espondidas\r\n        let Preguntas_Respondidas = this.state.Preguntas_Respondidas.filter(item => item !== ndatos3[0].label)\r\n        this.setState({\r\n            Preguntas_Respondidas: Preguntas_Respondidas\r\n        });\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    handleGeneralDato = (item) => {\r\n        //nitems: De los items filtro el key modificado (se elimina) y se concatena el nuevo item\r\n        const nitems = (this.state.items.filter((c) => c.key !== item.key)).concat(item)\r\n\r\n        //nitems2: Mismo nitems, pero sin la columna key (para el envío a la BD)\r\n        var nitems2 = [];\r\n        nitems.map((nitem) => nitems2 = nitems2.concat([{ idPregunta: nitem.key.split(\"-\")[1], Respuesta: nitem.val }]))\r\n\r\n        //KeyPageFile: Para obtener el id de la página (0) y el id de la fila (1)\r\n        const keyPageFile = item.key.split(\"-\")\r\n\r\n        //ndatos: De todos los datos originales que vienen de la BD, filtro solo la hoja asociada al item modificado\r\n        var ndatos = this.state.datos.filter((c) => c.id === parseInt(keyPageFile[0]))\r\n\r\n        //ndatos2: De la hoja (ndatos) saco solamente el arreglo de datos (las filas)\r\n        var ndatos2 = []\r\n        ndatos.map((ndato) =>\r\n            ndatos2 = ndatos2.concat(ndato.datos)\r\n        )\r\n\r\n        //ndatos3: De todas las filas (ndatos2), saco solo la correspondiente al item modificado\r\n        var ndatos3 = ndatos2.filter((c) => c.id === parseInt(keyPageFile[1]))\r\n        var Preguntas_Respondidas = this.state.Preguntas_Respondidas\r\n\r\n\r\n        //lleno el array con las preguntas respondidas para luego mostrar las faltantes\r\n        if (Preguntas_Respondidas.indexOf(ndatos3[0].label) === -1) {\r\n            Preguntas_Respondidas.push(ndatos3[0].label)\r\n\r\n            this.setState({\r\n                Preguntas_Respondidas: Preguntas_Respondidas\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n        //ndatos4: De la fila (ndatos3) saco sus elementos. Si es un checkbox, recorro el radiogroup y le asigno el checked=1 al elemento correspondiente\r\n        var ndatos4 = []\r\n        ndatos3.map((ndato) => {\r\n            if (ndato.type === 'checkboxes') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.label === item.val ? ndato.value = 1 : ndato.value = 0)\r\n                //ndatos3.checkboxes = ndatos4\r\n\r\n            } else if (ndato.type === 'textareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'numberareas') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'datepickers') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            } else if (ndato.type === 'fileuploads') {\r\n                ndatos4 = ndatos4.concat(ndato.items)\r\n                ndatos4.map((ndato) => ndato.value = item.val)\r\n            }\r\n            return null\r\n        })\r\n\r\n\r\n        //Ahora ndatos4 corresponde a la fila en el formato \"datos\", por lo que hay que reemplazarla en el array de datos\r\n        //ndatos2.datos = ndatos3\r\n\r\n        //const apiBody = {\r\n        //    \"hashCode\": this.props.token,\r\n        //    \"idFormulario\": 1,\r\n        //    \"idPlanta\": this.props.idPlanta,\r\n        //    \"idUsuario\": this.props.idUsuario,\r\n        //    \"idVehiculo\": this.props.idVehiculo,\r\n        //    \"resultados\": nitems2\r\n        //}\r\n\r\n\r\n        this.setState({\r\n            items: nitems,\r\n            respuestas: nitems2\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading) {\r\n            return (\r\n                <React.Fragment>\r\n                    <Header menu={true} title={this.props.Patente}>\r\n                    </Header>\r\n                    <Card>\r\n                        <Card.Header />\r\n                        <Card.Content>\r\n                            <Loader minHeight={400}>\r\n                                <div className=\"placeholder\" />\r\n                            </Loader>\r\n                        </Card.Content>\r\n                    </Card>\r\n                    <Footer copyrightText={\"© \" + new Date().getFullYear() + \" Honeywell Chile\"}>\r\n                        <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>\r\n                        <Footer.Item href=\"#\">Privacy Policy</Footer.Item>\r\n                    </Footer>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n        else\r\n            return (\r\n\r\n\r\n                <React.Fragment>\r\n                    <Header menu={true} title={this.props.Patente}>\r\n                    </Header>\r\n\r\n                    {/*{JSON.stringify(this.state.MensajeAPI)}<br />*/}\r\n                    {/*{JSON.stringify(this.state.Preguntas_Respondidas)}<br />*/}\r\n                    {/*{JSON.stringify(this.state.Preguntas_Faltantes)}*/}\r\n\r\n                    <Grupos\r\n                        key={1}\r\n                        token={this.props.token}\r\n                        id={this.state.datos[this.state.activePage].id}\r\n                        titulo={this.state.datos[this.state.activePage].titulo}\r\n                        items={this.state.datos[this.state.activePage].datos}\r\n                        onhandleGeneralDato={this.handleGeneralDato}\r\n                        onhandleGeneralRemoveDato={this.handleGeneralRemoveDato}\r\n                    />\r\n\r\n                    {this.renderModal()}\r\n                    {this.renderModalFin()}\r\n\r\n                    <table style={{ width: '100%' }}>\r\n                        <tr >\r\n                            <td>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-left\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"left\" onClick={this.click_Prev} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                            <td style={{ textAlign: 'center' }}>\r\n                                <Button className={this.state.hidden} type=\"primary\"\r\n                                    loading={this.state.isLoading}\r\n                                    size=\"small\"\r\n                                    content=\"Terminar\"\r\n                                    iconPosition=\"right\" onClick={this.click_Send} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n\r\n                            <td style={{ textAlign: 'right' }}>\r\n                                <Button type=\"primary\"\r\n                                    icon=\"caret-right\"\r\n                                    size=\"small\"\r\n                                    content=\"\"\r\n                                    iconPosition=\"right\" onClick={this.click_Next} disabled={this.state.isLoading}>\r\n                                </Button>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"2\"></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"2\"></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"2\"></td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            position=\"bottom-right\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <Footer copyrightText={\"© \" + new Date().getFullYear() + \" Honeywell Chile\"}>\r\n                        <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>\r\n                        <Footer.Item href=\"#\">Privacy Policy</Footer.Item>\r\n                    </Footer>\r\n                </React.Fragment>\r\n\r\n            );\r\n\r\n    }\r\n\r\n\r\n    renderModal() {\r\n        return (\r\n            <Modal closeIcon={true} size=\"mini\" onClose={() => this.setState({ modal: false })} open={this.state.modal} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    ¿Está Seguro?\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"No\" onClick={this.click_ModalNo} disabled={this.state.isLoading} />\r\n                    <Button type=\"primary\" size=\"small\" content=\"Si\" onClick={this.click_ModalSi} disabled={this.state.isLoading} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n    renderModalFin() {\r\n        return (\r\n            <Modal size=\"mini\" onClose={() => this.setState({ modalFin: false })} open={this.state.modalFin} closeOnDimmerClick={false}>\r\n                <Modal.Header>\r\n                    Formulario Enviado\r\n                </Modal.Header>\r\n                <Modal.Content>\r\n                    Situacion Final:<br />{<Badge color={this.state.Color_Situacion_Final.split('\\n')[0]}>{this.state.Situacion_Final.split('\\n')[0]} </Badge>}<br />{<Badge color={this.state.Color_Situacion_Final.split('\\n')[1]}>{this.state.Situacion_Final.split('\\n')[1]} </Badge>}\r\n                </Modal.Content>\r\n                <Modal.Footer>\r\n                    <Button type=\"secondary\" size=\"small\" content=\"Cerrar\" onClick={this.click_ModalFin} />\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Footer, Header, Loader } from \"@scuf/common\";\r\n\r\nclass MyIFrame extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hidden: \"\"\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        setTimeout(function () {\r\n            this.setState({ hidden: \"hidden\" });\r\n        }.bind(this), 2500)\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header menu={true} title={\"Reporte\"}>\r\n                </Header>\r\n                <div className={this.state.hidden}>\r\n                    <Loader minHeight={400}>\r\n                    </Loader>\r\n                </div>\r\n                <iframe\r\n                    width=\"100%\"\r\n                    height=\"1100px\"\r\n                    src=\"https://checklist.kairosmining.com/SSRS/SSRS.aspx\"\r\n                    frameborder=\"200\"\r\n                    title=\"SSRS\"\r\n                ></iframe>\r\n                <Footer copyrightText={new Date().getFullYear() + \" Honeywell Chile\"}>\r\n                    <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>\r\n                    <Footer.Item href=\"#\">Privacy Policy</Footer.Item>\r\n                </Footer>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyIFrame;\r\n","import React from \"react\";\r\n/*import axios from \"axios\";*/\r\n\r\nimport { BrowserView } from \"react-device-detect\";\r\nimport { Footer, Header, Notification, Button, List, Table, Select, Icon } from \"@scuf/common\";\r\nimport Formulario from \"./Formulario\";\r\nimport MyIFrame from \"./MyIFrame\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../toast-notification-wrap.css'\r\n\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\n//const config = require(\"../config.json\");\r\n//const Pagina = config.Pagina;\r\n\r\n//const headers = { 'Authorization': 'dalealbo' }\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        detailsText=\"Intentelo nuevamente\"\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n\r\n)\r\n\r\n\r\nexport default class SelVehiculo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selector: [],\r\n            estadoVehiculo: \"\",\r\n            idVehiculo: 0,\r\n            Patente: \"\",\r\n            idPlanta: 0,\r\n            habilitarBoton: false,\r\n            comenzar: 0,\r\n            hidden: \"hidden\"\r\n        };\r\n        this.onButtonClick = this.onButtonClick.bind(this);\r\n        this.onReporteClick = this.onReporteClick.bind(this);\r\n    }\r\n\r\n\r\n\r\n\r\n    componentWillMount() {\r\n\r\n        const vehiculos = this.props.vehiculos[0].vehiculos\r\n        var listavehiculos = []\r\n        vehiculos.map((item) =>\r\n            listavehiculos.push({ 'value': item.idPlanta + '$' + item.idVehiculo + '$' + item.patente, 'text': item.patente + ' (' + item.planta + ')' })\r\n        )\r\n\r\n        this.setState({\r\n            vehiculos: vehiculos,\r\n            selector: listavehiculos\r\n        })\r\n\r\n    }\r\n\r\n\r\n    handleOnChange = (value) => {\r\n\r\n        var vehiculoSeleccionadoEstado\r\n        var idVehiculo\r\n\r\n        this.state.vehiculos.filter(vehiculo => vehiculo.idPlanta === value.split(\"$\")[0] & vehiculo.idVehiculo === value.split(\"$\")[1]).map(filteredVehicle => {\r\n            vehiculoSeleccionadoEstado = filteredVehicle.estado\r\n            idVehiculo = filteredVehicle.idVehiculo\r\n            return null\r\n        }\r\n        )\r\n\r\n\r\n        this.setState({\r\n            idPlanta: Number(value.split('$')[0]),\r\n            Patente: value.split('$')[2],\r\n            idVehiculo: Number(idVehiculo),\r\n            estadoVehiculo: vehiculoSeleccionadoEstado\r\n        })\r\n\r\n    }\r\n\r\n    onButtonClick() {\r\n        this.setState({ comenzar: 1 })\r\n    }\r\n\r\n    onReporteClick() {\r\n        this.setState({ comenzar: 2 })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.comenzar === 1) {\r\n            return (\r\n                <Formulario idUsuario={this.props.idUsuario} token={this.props.token} idVehiculo={this.state.idVehiculo} Patente={this.state.Patente} idPlanta={this.state.idPlanta} />\r\n            )\r\n        }\r\n        else if (this.state.comenzar === 2) {\r\n            return (\r\n                <MyIFrame />\r\n            )\r\n        }\r\n        else\r\n            return (\r\n                <React.Fragment>\r\n\r\n                    {/*{\"Planta \" + JSON.stringify(this.state.idPlanta)}*/}\r\n                    {/*<br />*/}\r\n                    {/*{\"vehiculo \" + JSON.stringify(this.state.idVehiculo)}*/}\r\n                    <Header title=\"CheckList\">\r\n                    </Header>\r\n                    <Table>\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell textAlign=\"center\">\r\n                                    <Select fluid={true} placeholder=\"Seleccione el Vehiculo\" options={this.state.selector} onChange={(value) => this.handleOnChange(value)} />\r\n\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <Button className=\"fullancho\" disabled={this.state.estadoVehiculo === \"OK\" ? false : true} fluid={true} content=\"Comenzar\" onClick={this.onButtonClick} />\r\n                                    </div>\r\n\r\n                                    <BrowserView>\r\n                                        <div style={{ paddingTop: 10 }}>\r\n                                            <td onClick={this.onReporteClick}><Icon name={\"document-report\"} root=\"common\" /></td>\r\n                                        </div>\r\n                                    </BrowserView>\r\n\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell textAlign=\"left\">\r\n                                    <div>\r\n                                        {this.state.vehiculos.filter(vehiculo => Number(vehiculo.idPlanta) === this.state.idPlanta & Number(vehiculo.idVehiculo) === this.state.idVehiculo).map(filteredVehicle => (\r\n                                            <React.Fragment>\r\n                                                {filteredVehicle.estado === \"OK\" ? \"Vehiculo Habilitado\" : filteredVehicle.estado}&nbsp;&nbsp;&nbsp;{<Icon name={filteredVehicle.estado === \"OK\" ? \"badge-check\" : \"badge-stop\"} root=\"common\" />}\r\n                                                <br />\r\n                                                <List bulleted={true}>\r\n\r\n                                                    <List.Content>Permiso Circulación: {filteredVehicle.permiso_Circulacion}</List.Content>\r\n                                                    <List.Content>Seguro Obligatorio: {filteredVehicle.seguro_Obligatorio}</List.Content>\r\n                                                    <List.Content>Revision Técnica: {filteredVehicle.revision_Tecnica}</List.Content>\r\n                                                    <List.Content>Responsable: {filteredVehicle.responsable}</List.Content>\r\n                                                    <List.Content>Ultima Revision: {filteredVehicle.lastchecklist}</List.Content>\r\n                                                </List>\r\n                                            </React.Fragment>\r\n                                        ))}\r\n\r\n\r\n                                        {/*<React.Fragment>*/}\r\n                                        {/*    {this.state.vehiculoSeleccionado[0].estado === \"OK\" ? \"Vehiculo Habilitado\" : this.state.vehiculoSeleccionado[0].estado}&nbsp;&nbsp;&nbsp;{<Icon name={this.state.vehiculoSeleccionado[0].estado === \"OK\" ? \"badge-check\" : \"badge-stop\"} root=\"common\" />}*/}\r\n                                        {/*    <br />*/}\r\n                                        {/*    <List bulleted={true}>*/}\r\n\r\n                                        {/*        <List.Content>Permiso Circulación: {this.state.vehiculoSeleccionado[0].permiso_Circulacion}</List.Content>*/}\r\n                                        {/*        <List.Content>Seguro Obligatorio: {this.state.vehiculoSeleccionado[0].seguro_Obligatorio}</List.Content>*/}\r\n                                        {/*        <List.Content>Revision Técnica: {this.state.vehiculoSeleccionado[0].revision_Tecnica}</List.Content>*/}\r\n                                        {/*        <List.Content>Responsable: {this.state.vehiculoSeleccionado[0].responsable}</List.Content>*/}\r\n                                        {/*    </List>*/}\r\n                                        {/*</React.Fragment>*/}\r\n\r\n                                    </div>\r\n\r\n                                    {/*<List className={this.state.hidden}>*/}\r\n                                    {/*    <List.Content>Rocket Raccoon</List.Content>*/}\r\n                                    {/*    <List.Content>Groot</List.Content>*/}\r\n                                    {/*</List>*/}\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n\r\n\r\n                    {/*{*/}\r\n                    {/*    (() => {*/}\r\n                    {/*        switch (this.state.idUsuario) {*/}\r\n                    {/*            case -1:*/}\r\n                    {/*                ReactToastify.toast(<ToastNotification Texto={\"Usuario Invalido\"} closeToast={true} />);*/}\r\n                    {/*                this.setState({ idUsuario: 0 })*/}\r\n                    {/*                break;*/}\r\n                    {/*            case -2:*/}\r\n                    {/*                ReactToastify.toast(<ToastNotification Texto={\"Error API\"} closeToast={true} />);*/}\r\n                    {/*                this.setState({ idUsuario: 0 })*/}\r\n                    {/*                break;*/}\r\n                    {/*            default:*/}\r\n                    {/*                return null;*/}\r\n                    {/*        }*/}\r\n                    {/*    })()*/}\r\n                    {/*}*/}\r\n\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            position=\"bottom-right\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <Footer copyrightText={\"© \" + new Date().getFullYear() + \" Honeywell Chile\"}>\r\n                        <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>\r\n                        <Footer.Item href=\"#\">Privacy Policy</Footer.Item>\r\n                    </Footer>\r\n                </React.Fragment >\r\n\r\n            );\r\n    }\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n//import \"@scuf/common/honeywell/theme.css\";\r\n//import \"@scuf/common/honeywell-dark/theme.css\";\r\n\r\nimport { Header, Notification, Button, Input, Icon, Table, Checkbox, Statistic, Grid } from \"@scuf/common\";\r\nimport SelVehiculo from \"./Components/SelVehiculo\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './toast-notification-wrap.css'\r\n\r\nconst ReactToastify = require('react-toastify');\r\n\r\nconst config = require(\"./config.json\");\r\nconst API = config.api_login\r\nconst apiKey = config.authorization;\r\nconst headers = { 'authorization': apiKey }\r\n\r\n\r\nfunction Tema() {\r\n\r\n    var Theme\r\n    if (localStorage.getItem('checklistTheme') === 'true')\r\n        Theme = lazy(() => import(\"./Components/Theme_Light\"))\r\n    else\r\n        Theme = lazy(() => import(\"./Components/Theme_Dark\"))\r\n\r\n\r\n    return <Suspense fallback={null}>\r\n        <Theme />\r\n    </Suspense>\r\n\r\n\r\n}\r\n\r\n\r\nconst ToastNotification = ({ closeToast, Texto }) => (\r\n    <Notification\r\n        className=\"toast-notification\"\r\n        severity=\"critical\"\r\n        onCloseClick={closeToast}\r\n        hasIcon={true}\r\n        title={Texto}\r\n        detailsText=\"Intentelo nuevamente\"\r\n        onDetailsClick={() => { }} //{() => alert('Debie ingresar todos los datos para continuar')}\r\n    />\r\n\r\n)\r\n\r\n\r\n\r\n\r\nexport default class App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tema: localStorage.getItem('checklistTheme'),\r\n            hidden: \"hidden\",\r\n            RUT: \"\",\r\n            vehiculos: [],\r\n            idUsuario: 0,\r\n            token: \"\",\r\n            isLoading: false,\r\n            JsonString: []\r\n        };\r\n        this.onButtonClick = this.onButtonClick.bind(this);\r\n    }\r\n\r\n    onButtonClick() {\r\n\r\n        this.setState({ isLoading: true });\r\n        if (this.state.RUT.length < 7)\r\n            this.setState({ idUsuario: -1, isLoading: false })\r\n        else\r\n            try {\r\n\r\n                axios.post(`${API}`,\r\n                    {\r\n                        \"RUT\": this.state.RUT,\r\n                        \"idPais\": 1,\r\n                    },\r\n                    { headers: headers })\r\n                    .then((res) => {\r\n                        const items = JSON.parse(res.data[0].JsonString)\r\n                        this.setState({\r\n                            idUsuario: Number(items[0].idUsuario),\r\n                            token: items[0].token,\r\n                            vehiculos: items,\r\n                            isLoading: false\r\n                        });\r\n                    });\r\n\r\n\r\n\r\n            } catch (e) {\r\n                this.setState({\r\n                    idUsuario: -2,\r\n                    isLoading: false,\r\n                    JsonString: e\r\n                })\r\n            }\r\n\r\n    }\r\n\r\n\r\n    handleOnChangeTheme = (checked) => {\r\n        localStorage.setItem('checklistTheme', checked.toString())\r\n        window.location.reload();\r\n    }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        setTimeout(function () {\r\n            this.setState({ hidden: \"\" });\r\n        }.bind(this), 75)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        if (this.state.idUsuario > 0) {\r\n            return (\r\n                <SelVehiculo idUsuario={this.state.idUsuario} token={this.state.token} vehiculos={this.state.vehiculos} />\r\n            )\r\n        }\r\n        else\r\n            return (\r\n                <div className={this.state.hidden}>\r\n                    {/*{JSON.stringify(this.state.idUsuario)}*/}\r\n\r\n                    <Tema onLoaded={this.handleLoaded} />\r\n                    <Header title=\"CheckList\">\r\n                        {/*<Header.Item href=\"#\">*/}\r\n                        {/*    <Checkbox label={this.state.tema === 'true' ? 'Claro' : 'Oscuro'} toggle={true} checked={this.state.tema === 'true' ? true : false}*/}\r\n                        {/*        onChange={(checked) => this.handleOnChangeTheme(checked)} />*/}\r\n                        {/*</Header.Item>*/}\r\n                    </Header>\r\n\r\n\r\n                    <Grid>\r\n                        <Grid.Row>\r\n                            <Grid.Column width={4} sWidth={12}>\r\n                                <Statistic value=\"\" fluid={true} />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={4} sWidth={12}>\r\n                                <Statistic value=\"CheckList Vehicular\" fluid={true} />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={4} sWidth={12}>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n\r\n\r\n                    <Table className=\"bottom\">\r\n                        <Table.Body>\r\n                            <Table.Row>\r\n                                <Table.Cell textAlign=\"center\">\r\n                                    <Input fluid={true} disabled={this.state.isLoading} placeholder=\"RUT\" value={this.state.RUT} onChange={(value) => this.setState({ RUT: value })} />\r\n                                    <div style={{ paddingTop: 10 }}>\r\n                                        <Button className=\"fullancho\" disabled={this.state.isLoading} loading={this.state.isLoading} fluid={true} icon={<Icon name=\"user\" root=\"common\" />} content=\"Ingresar\" onClick={this.onButtonClick} />\r\n                                    </div>\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                            <Table.Row>\r\n                                <Table.Cell textAlign=\"right\">\r\n                                    <Checkbox label={this.state.tema === 'true' ? 'Light' : 'Dark'} toggle={true} checked={this.state.tema === 'true' ? true : false}\r\n                                        onChange={(checked) => this.handleOnChangeTheme(checked)} />\r\n                                </Table.Cell>\r\n                            </Table.Row>\r\n                        </Table.Body>\r\n                    </Table>\r\n\r\n\r\n                    {\r\n                        (() => {\r\n                            switch (this.state.idUsuario) {\r\n                                case -1:\r\n                                    ReactToastify.toast(<ToastNotification Texto={\"Usuario Invalido\"} closeToast={true} />);\r\n                                    this.setState({ idUsuario: 0 })\r\n                                    break;\r\n                                case -2:\r\n                                    ReactToastify.toast(<ToastNotification Texto={\"Error API\"} closeToast={true} />);\r\n                                    this.setState({ idUsuario: 0 })\r\n                                    break;\r\n                                default:\r\n                                    return null;\r\n                            }\r\n                        })()\r\n                    }\r\n\r\n\r\n                    <div>\r\n                        <ReactToastify.ToastContainer\r\n                            hideProgressBar={false}\r\n                            closeOnClick={false}\r\n                            closeButton={false}\r\n                            newestOnTop={true}\r\n                            position=\"bottom-right\"\r\n                            autoClose={2500}\r\n                            toastClassName=\"toast-notification-wrap\"\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    {/*<Footer className=\"bottom\" copyrightText={\"© \" + new Date().getFullYear() + \" Honeywell Chile\"}>*/}\r\n                    {/*    <Footer.Item href=\"#\">Terms & Conditions</Footer.Item>*/}\r\n                    {/*    <Footer.Item href=\"#\">Privacy Policy</Footer.Item>*/}\r\n                    {/*</Footer>*/}\r\n                </div >\r\n\r\n            );\r\n    }\r\n\r\n    notify() {\r\n        ReactToastify.toast(<ToastNotification closeToast={true} />)\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\n    <App />\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}